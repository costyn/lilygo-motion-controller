name: PlatformIO CI

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.platformio/.cache
        key: ${{ runner.os }}-pio-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install PlatformIO
      run: |
        pip install --upgrade platformio
        pio --version

    - name: Build firmware
      run: pio run --environment pico32

    - name: Build SPIFFS filesystem
      run: pio run --target buildfs --environment pico32

    - name: Run tests
      run: pio test --environment native

    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-pico32
        path: |
          .pio/build/pico32/firmware.bin
          .pio/build/pico32/firmware.elf
        retention-days: 30

    - name: Upload SPIFFS artifact
      uses: actions/upload-artifact@v4
      with:
        name: spiffs-pico32
        path: .pio/build/pico32/spiffs.bin
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all firmware artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare release files
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        mkdir -p release

        # Copy firmware and SPIFFS files
        cp artifacts/firmware-pico32/firmware.bin release/lilygo-motion-controller-${VERSION}.bin
        cp artifacts/spiffs-pico32/spiffs.bin release/spiffs-${VERSION}.bin

        # Create checksums
        cd release
        sha256sum *.bin > checksums.txt

    - name: Extract release notes
      id: extract_notes
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract version section from CHANGELOG if it exists
          echo "Release ${{ github.ref_name }}" > release_notes.md
        else
          echo "Release ${{ github.ref_name }}" > release_notes.md
          echo "" >> release_notes.md
          echo "## Files" >> release_notes.md
          echo "- \`lilygo-motion-controller-${{ github.ref_name }}.bin\` - Main firmware" >> release_notes.md
          echo "- \`spiffs-${{ github.ref_name }}.bin\` - Web interface filesystem" >> release_notes.md
          echo "- \`checksums.txt\` - SHA256 checksums" >> release_notes.md
          echo "" >> release_notes.md
          echo "## Installation" >> release_notes.md
          echo "Flash both files using esptool or PlatformIO." >> release_notes.md
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/*.bin
          release/checksums.txt
        body_path: release_notes.md
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
