name: Test Suite

on:
  push:
    branches: [ main, dev, adding-unit-tests ]
  pull_request:
    branches: [ main, dev ]

jobs:
  cpp-tests:
    name: C++ Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache PlatformIO
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.platformio/.cache
        key: ${{ runner.os }}-pio-test-${{ hashFiles('**/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-pio-test-
          ${{ runner.os }}-pio-

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install PlatformIO
      run: |
        pip install --upgrade platformio
        pio --version

    - name: Run C++ native tests
      run: |
        echo "Running C++ unit tests..."
        pio test -e native --verbose
      continue-on-error: false

    - name: Test Summary
      if: always()
      run: |
        echo "## C++ Test Results" >> $GITHUB_STEP_SUMMARY
        echo "Environment: native" >> $GITHUB_STEP_SUMMARY
        echo "Tests completed. Check logs for details." >> $GITHUB_STEP_SUMMARY

  webapp-tests:
    name: WebApp Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: webapp/package-lock.json

    - name: Install dependencies
      working-directory: webapp
      run: npm ci

    - name: Run tests
      working-directory: webapp
      run: npm test -- --run --reporter=verbose

    - name: Run tests with coverage
      working-directory: webapp
      run: npm test -- --run --coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: always()
      with:
        files: ./webapp/coverage/coverage-final.json
        flags: webapp
        name: webapp-coverage
        fail_ci_if_error: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Test Summary
      if: always()
      run: |
        echo "## WebApp Test Results" >> $GITHUB_STEP_SUMMARY
        echo "Check the logs above for detailed test results." >> $GITHUB_STEP_SUMMARY
        if [ -f webapp/coverage/coverage-summary.json ]; then
          echo "Coverage report generated successfully." >> $GITHUB_STEP_SUMMARY
        fi

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [cpp-tests, webapp-tests]
    if: always()

    steps:
    - name: Check test results
      run: |
        echo "## Overall Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- C++ Tests: ${{ needs.cpp-tests.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- WebApp Tests: ${{ needs.webapp-tests.result }}" >> $GITHUB_STEP_SUMMARY

        if [ "${{ needs.cpp-tests.result }}" != "success" ] || [ "${{ needs.webapp-tests.result }}" != "success" ]; then
          echo "❌ Some tests failed" >> $GITHUB_STEP_SUMMARY
          exit 1
        else
          echo "✅ All tests passed" >> $GITHUB_STEP_SUMMARY
        fi
